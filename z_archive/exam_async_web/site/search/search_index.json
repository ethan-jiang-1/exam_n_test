{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Async Web Fetcher","text":"<p>\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u9ad8\u6548\u200b\u7684\u200b\u5f02\u6b65\u200b\u7f51\u9875\u5185\u5bb9\u200b\u83b7\u53d6\u200b\u5de5\u5177\u200b\u3002</p>"},{"location":"#_1","title":"\u7279\u6027","text":"<ul> <li>\u2728 \u200b\u5f02\u6b65\u200b\u5e76\u53d1\u200b\u83b7\u53d6\u200b</li> <li>\ud83d\udd04 \u200b\u53ef\u200b\u63a7\u5236\u200b\u7684\u200b\u5e76\u53d1\u200b\u6570\u91cf\u200b</li> <li>\u23f1\ufe0f \u200b\u8d85\u65f6\u200b\u63a7\u5236\u200b</li> <li>\ud83d\udcdd \u200b\u81ea\u5b9a\u4e49\u200b\u8bf7\u6c42\u200b\u5934\u200b</li> <li>\ud83d\uddbc\ufe0f \u200b\u4e8c\u8fdb\u5236\u200b\u5185\u5bb9\u200b\u652f\u6301\u200b</li> <li>\ud83d\udea6 \u200b\u5b8c\u5584\u200b\u7684\u200b\u9519\u8bef\u5904\u7406\u200b</li> </ul>"},{"location":"#_2","title":"\u5feb\u901f\u200b\u5f00\u59cb","text":"<pre><code>import asyncio\nfrom exam_async_web import fetch\n\nasync def main():\n    # \u200b\u83b7\u53d6\u200b\u5355\u4e2a\u200b\u9875\u9762\u200b\n    result = await fetch(\"https://example.com\")\n    print(result[\"content\"])\n\n    # \u200b\u83b7\u53d6\u200b\u591a\u4e2a\u200b\u9875\u9762\u200b\n    results = await fetch([\n        \"https://example.com\",\n        \"https://example.org\"\n    ], max_concurrent=3)\n\n    for result in results:\n        print(f\"{result['url']}: {result['status']}\")\n\nasyncio.run(main())\n</code></pre>"},{"location":"#async-web-fetcher_1","title":"\u4e3a\u4ec0\u4e48\u200b\u9009\u62e9\u200b Async Web Fetcher?","text":"<ul> <li>\u200b\u7b80\u5355\u200b: \u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u641e\u5b9a\u200b\u6240\u6709\u200b\u529f\u80fd\u200b</li> <li>\u200b\u9ad8\u6548\u200b: \u200b\u5f02\u6b65\u200b\u5e76\u53d1\u200b\uff0c\u200b\u6027\u80fd\u200b\u51fa\u8272\u200b</li> <li>\u200b\u53ef\u9760\u200b: \u200b\u5b8c\u5584\u200b\u7684\u200b\u9519\u8bef\u5904\u7406\u200b\u548c\u200b\u8d85\u65f6\u200b\u63a7\u5236\u200b</li> <li>\u200b\u7075\u6d3b\u200b: \u200b\u652f\u6301\u200b\u6587\u672c\u200b\u548c\u200b\u4e8c\u8fdb\u5236\u200b\u5185\u5bb9\u200b</li> <li>\u200b\u53cb\u597d\u200b: \u200b\u8be6\u7ec6\u200b\u7684\u200b\u6587\u6863\u200b\u548c\u200b\u793a\u4f8b\u200b </li> </ul>"},{"location":"api/","title":"API \u200b\u53c2\u8003","text":""},{"location":"api/#fetch","title":"fetch","text":"<pre><code>async def fetch(\n    urls: Union[str, List[str]], *,\n    max_concurrent: int = 5,\n    headers: Optional[Dict] = None,\n    timeout: int = 30,\n    as_binary: bool = False\n) -&gt; Union[Dict, List[Dict]]\n</code></pre> <p>\u200b\u4e3b\u8981\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u4e00\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200bURL\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002</p>"},{"location":"api/#_1","title":"\u53c2\u6570","text":"<ul> <li> <p>urls (<code>str | List[str]</code>)</p> <ul> <li>\u200b\u8981\u200b\u83b7\u53d6\u200b\u7684\u200bURL\u200b\u6216\u200bURL\u200b\u5217\u8868\u200b</li> <li>\u200b\u5355\u4e2a\u200bURL\u200b\u65f6\u200b\u4f20\u5165\u200b\u5b57\u7b26\u4e32\u200b</li> <li>\u200b\u591a\u4e2a\u200bURL\u200b\u65f6\u200b\u4f20\u5165\u200b\u5b57\u7b26\u4e32\u200b\u5217\u8868\u200b</li> </ul> </li> <li> <p>max_concurrent (<code>int</code>, \u200b\u53ef\u200b\u9009\u200b)</p> <ul> <li>\u200b\u6700\u5927\u200b\u5e76\u53d1\u200b\u8bf7\u6c42\u200b\u6570\u200b</li> <li>\u200b\u9ed8\u8ba4\u503c\u200b\uff1a5</li> <li>\u200b\u4ec5\u200b\u5728\u200b\u4f20\u5165\u200bURL\u200b\u5217\u8868\u200b\u65f6\u200b\u6709\u6548\u200b</li> </ul> </li> <li> <p>headers (<code>Dict[str, str]</code>, \u200b\u53ef\u200b\u9009\u200b)</p> <ul> <li>\u200b\u81ea\u5b9a\u4e49\u200bHTTP\u200b\u8bf7\u6c42\u200b\u5934\u200b</li> <li>\u200b\u9ed8\u8ba4\u503c\u200b\uff1aNone</li> <li>\u200b\u793a\u4f8b\u200b\uff1a<code>{\"User-Agent\": \"MyBot/1.0\"}</code></li> </ul> </li> <li> <p>timeout (<code>int</code>, \u200b\u53ef\u200b\u9009\u200b)</p> <ul> <li>\u200b\u8bf7\u6c42\u200b\u8d85\u65f6\u200b\u65f6\u95f4\u200b\uff08\u200b\u79d2\u200b\uff09</li> <li>\u200b\u9ed8\u8ba4\u503c\u200b\uff1a30</li> <li>\u200b\u5efa\u8bae\u200b\u6839\u636e\u200b\u5b9e\u9645\u200b\u9700\u6c42\u200b\u8c03\u6574\u200b</li> </ul> </li> <li> <p>as_binary (<code>bool</code>, \u200b\u53ef\u200b\u9009\u200b)</p> <ul> <li>\u200b\u662f\u5426\u200b\u4ee5\u200b\u4e8c\u8fdb\u5236\u200b\u5f62\u5f0f\u200b\u8fd4\u56de\u200b\u5185\u5bb9\u200b</li> <li>\u200b\u9ed8\u8ba4\u503c\u200b\uff1aFalse</li> <li>\u200b\u4e0b\u8f7d\u200b\u56fe\u7247\u200b\u7b49\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\u65f6\u8bbe\u200b\u4e3a\u200bTrue</li> </ul> </li> </ul>"},{"location":"api/#_2","title":"\u8fd4\u56de\u503c","text":"<p>\u200b\u5f53\u200b\u4f20\u5165\u200b\u5355\u4e2a\u200bURL\u200b\u65f6\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5b57\u5178\u200b\uff1a <pre><code>{\n    \"url\": str,          # \u200b\u8bf7\u6c42\u200b\u7684\u200bURL\n    \"status\": str,       # \u200b\u72b6\u6001\u200b\u7801\u200b\u6216\u200b\u72b6\u6001\u200b\n    \"content\": str/bytes, # \u200b\u54cd\u5e94\u200b\u5185\u5bb9\u200b\n    \"headers\": dict      # \u200b\u54cd\u5e94\u200b\u5934\u200b\n}\n</code></pre></p> <p>\u200b\u5f53\u200b\u4f20\u5165\u200bURL\u200b\u5217\u8868\u200b\u65f6\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5b57\u5178\u200b\u5217\u8868\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5b57\u5178\u200b\u683c\u5f0f\u200b\u540c\u200b\u4e0a\u200b\u3002</p>"},{"location":"api/#_3","title":"\u72b6\u6001\u200b\u7801","text":"<ul> <li><code>\"200\"</code>: \u200b\u8bf7\u6c42\u200b\u6210\u529f\u200b</li> <li><code>\"404\"</code>: \u200b\u9875\u9762\u200b\u4e0d\u200b\u5b58\u5728\u200b</li> <li><code>\"timeout\"</code>: \u200b\u8bf7\u6c42\u200b\u8d85\u65f6\u200b</li> <li><code>\"error\"</code>: \u200b\u5176\u4ed6\u200b\u9519\u8bef\u200b</li> </ul>"},{"location":"api/#_4","title":"\u5f02\u5e38\u200b\u5904\u7406","text":"<p>\u200b\u8be5\u200b\u51fd\u6570\u200b\u4e0d\u4f1a\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\uff0c\u200b\u6240\u6709\u200b\u9519\u8bef\u200b\u90fd\u200b\u4f1a\u200b\u5728\u200b\u8fd4\u56de\u200b\u7684\u200b\u5b57\u5178\u200b\u4e2d\u200b\u901a\u8fc7\u200bstatus\u200b\u5b57\u200b\u6bb5\u200b\u8868\u793a\u200b\u3002</p>"},{"location":"api/#_5","title":"\u793a\u4f8b","text":""},{"location":"api/#_6","title":"\u57fa\u672c\u200b\u7528\u6cd5","text":"<pre><code># \u200b\u83b7\u53d6\u200b\u5355\u4e2a\u200b\u9875\u9762\u200b\nresult = await fetch(\"https://example.com\")\nprint(result[\"content\"])\n\n# \u200b\u83b7\u53d6\u200b\u591a\u4e2a\u200b\u9875\u9762\u200b\nresults = await fetch([\n    \"https://example.com\",\n    \"https://example.org\"\n])\n</code></pre>"},{"location":"api/#_7","title":"\u81ea\u5b9a\u4e49\u200b\u9009\u9879","text":"<pre><code># \u200b\u8bbe\u7f6e\u200b\u8bf7\u6c42\u200b\u5934\u200b\u548c\u200b\u8d85\u65f6\u200b\nresult = await fetch(\n    \"https://api.example.com\",\n    headers={\"Accept\": \"application/json\"},\n    timeout=5\n)\n\n# \u200b\u4e0b\u8f7d\u200b\u56fe\u7247\u200b\nresult = await fetch(\n    \"https://example.com/image.png\",\n    as_binary=True\n)\n</code></pre>"},{"location":"api/#_8","title":"\u9519\u8bef\u5904\u7406","text":"<pre><code>result = await fetch(\"https://example.com\")\nmatch result[\"status\"]:\n    case \"200\":\n        process_content(result[\"content\"])\n    case \"404\":\n        handle_not_found()\n    case \"timeout\":\n        handle_timeout()\n    case \"error\":\n        handle_error(result[\"content\"])\n</code></pre>"},{"location":"api/#_9","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u8d44\u6e90\u7ba1\u7406\u200b</li> <li>\u200b\u51fd\u6570\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u7ba1\u7406\u200bHTTP\u200b\u4f1a\u8bdd\u200b</li> <li> <p>\u200b\u4e0d\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5173\u95ed\u200b\u8fde\u63a5\u200b</p> </li> <li> <p>\u200b\u5e76\u53d1\u200b\u63a7\u5236\u200b</p> </li> <li><code>max_concurrent</code>\u200b\u53c2\u6570\u200b\u9632\u6b62\u200b\u8fc7\u5ea6\u200b\u5e76\u53d1\u200b</li> <li> <p>\u200b\u5efa\u8bae\u200b\u6839\u636e\u200b\u76ee\u6807\u200b\u670d\u52a1\u5668\u200b\u8c03\u6574\u200b</p> </li> <li> <p>\u200b\u5185\u5b58\u200b\u4f7f\u7528\u200b</p> </li> <li>\u200b\u83b7\u53d6\u200b\u5927\u200b\u6587\u4ef6\u200b\u65f6\u200b\u6ce8\u610f\u200b\u5185\u5b58\u200b\u4f7f\u7528\u200b</li> <li> <p>\u200b\u8003\u8651\u200b\u5206\u6279\u200b\u5904\u7406\u200b\u5927\u91cf\u200bURL</p> </li> <li> <p>\u200b\u9519\u8bef\u5904\u7406\u200b</p> </li> <li>\u200b\u68c0\u67e5\u200b\u8fd4\u56de\u200b\u7684\u200bstatus\u200b\u5b57\u200b\u6bb5\u200b</li> <li>\u200b\u6240\u6709\u200b\u9519\u8bef\u200b\u90fd\u200b\u6709\u200b\u5bf9\u5e94\u200b\u7684\u200b\u9519\u8bef\u4fe1\u606f\u200b </li> </ol>"},{"location":"installation/","title":"\u5b89\u88c5\u200b\u6307\u5357","text":""},{"location":"installation/#_2","title":"\u7cfb\u7edf\u200b\u8981\u6c42","text":"<ul> <li>Python 3.7 \u200b\u6216\u200b\u66f4\u200b\u9ad8\u200b\u7248\u672c\u200b</li> <li>\u200b\u652f\u6301\u200b\u5f02\u6b65\u200b IO \u200b\u7684\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\uff08Windows\u3001macOS\u3001Linux\uff09</li> </ul>"},{"location":"installation/#pip","title":"\u4f7f\u7528\u200b pip \u200b\u5b89\u88c5","text":"<p>\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u5b89\u88c5\u200b\u65b9\u5f0f\u200b\u662f\u200b\u4f7f\u7528\u200b pip\uff1a</p> <pre><code>pip install exam-async-web\n</code></pre>"},{"location":"installation/#_3","title":"\u4ece\u200b\u6e90\u7801\u200b\u5b89\u88c5","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u8981\u200b\u6700\u65b0\u200b\u7684\u200b\u5f00\u53d1\u200b\u7248\u672c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u6e90\u7801\u200b\u5b89\u88c5\u200b\uff1a</p> <pre><code>git clone https://github.com/yourusername/exam-async-web.git\ncd exam-async-web\npip install -e .\n</code></pre>"},{"location":"installation/#_4","title":"\u9a8c\u8bc1\u200b\u5b89\u88c5","text":"<p>\u200b\u5b89\u88c5\u200b\u5b8c\u6210\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b Python \u200b\u4e2d\u200b\u9a8c\u8bc1\u200b\u5b89\u88c5\u200b\uff1a</p> <pre><code>import asyncio\nfrom exam_async_web import fetch\n\nasync def test():\n    result = await fetch(\"https://example.com\")\n    print(f\"Status: {result['status']}\")\n\nasyncio.run(test())\n</code></pre> <p>\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u62a5\u9519\u200b\u5e76\u4e14\u200b\u80fd\u200b\u770b\u5230\u200b\u72b6\u6001\u200b\u7801\u200b\u8f93\u51fa\u200b\uff0c\u200b\u8bf4\u660e\u200b\u5b89\u88c5\u200b\u6210\u529f\u200b\u3002</p>"},{"location":"installation/#_5","title":"\u53ef\u200b\u9009\u200b\u4f9d\u8d56","text":"<ul> <li><code>pytest</code>: \u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u8fd0\u884c\u200b\u6d4b\u8bd5\u200b</li> <li><code>pytest-asyncio</code>: \u200b\u7528\u4e8e\u200b\u5f02\u6b65\u200b\u6d4b\u8bd5\u200b</li> </ul> <p>\u200b\u5b89\u88c5\u200b\u53ef\u200b\u9009\u200b\u4f9d\u8d56\u200b\uff1a</p> <pre><code>pip install exam-async-web[test]\n</code></pre>"},{"location":"installation/#_6","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"installation/#importerror-no-module-named-exam_async_web","title":"ImportError: No module named 'exam_async_web'","text":"<p>\u200b\u786e\u4fdd\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u6b63\u786e\u200b\u5b89\u88c5\u200b\u4e86\u200b\u5305\u200b\uff1a <pre><code>pip list | grep exam-async-web\n</code></pre></p>"},{"location":"installation/#runtimeerror-event-loop-is-closed","title":"RuntimeError: Event loop is closed","text":"<p>\u200b\u5728\u200b Windows \u200b\u4e0a\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u9047\u5230\u200b\u8fd9\u4e2a\u200b\u9519\u8bef\u200b\uff0c\u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\uff1a</p> <pre><code>import asyncio\nimport platform\n\nif platform.system() == 'Windows':\n    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())\n</code></pre>"},{"location":"usage/","title":"\u4f7f\u7528\u200b\u6559\u7a0b","text":""},{"location":"usage/#_2","title":"\u57fa\u7840\u200b\u7528\u6cd5","text":""},{"location":"usage/#_3","title":"\u83b7\u53d6\u200b\u5355\u4e2a\u200b\u9875\u9762","text":"<pre><code>import asyncio\nfrom exam_async_web import fetch\n\nasync def main():\n    result = await fetch(\"https://example.com\")\n    print(result[\"content\"])\n\nasyncio.run(main())\n</code></pre>"},{"location":"usage/#_4","title":"\u83b7\u53d6\u200b\u591a\u4e2a\u200b\u9875\u9762","text":"<pre><code>async def main():\n    urls = [\n        \"https://example.com\",\n        \"https://example.org\"\n    ]\n    results = await fetch(urls, max_concurrent=3)\n    for result in results:\n        print(f\"{result['url']}: {result['status']}\")\n</code></pre>"},{"location":"usage/#_5","title":"\u9ad8\u7ea7\u200b\u7528\u6cd5","text":""},{"location":"usage/#_6","title":"\u81ea\u5b9a\u4e49\u200b\u8bf7\u6c42\u200b\u5934","text":"<pre><code>async def main():\n    headers = {\n        \"User-Agent\": \"MyBot/1.0\",\n        \"Accept\": \"application/json\"\n    }\n    result = await fetch(\n        \"https://api.example.com\",\n        headers=headers\n    )\n</code></pre>"},{"location":"usage/#_7","title":"\u4e0b\u8f7d\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6","text":"<pre><code>async def main():\n    # \u200b\u4e0b\u8f7d\u200b\u56fe\u7247\u200b\n    result = await fetch(\n        \"https://example.com/image.png\",\n        as_binary=True\n    )\n\n    # \u200b\u4fdd\u5b58\u200b\u5230\u200b\u6587\u4ef6\u200b\n    if result[\"status\"] == \"200\":\n        with open(\"image.png\", \"wb\") as f:\n            f.write(result[\"content\"])\n</code></pre>"},{"location":"usage/#_8","title":"\u8bbe\u7f6e\u200b\u8d85\u65f6","text":"<pre><code>async def main():\n    # \u200b\u8bbe\u7f6e\u200b5\u200b\u79d2\u200b\u8d85\u65f6\u200b\n    result = await fetch(\n        \"https://slow-server.com\",\n        timeout=5\n    )\n\n    if result[\"status\"] == \"timeout\":\n        print(\"\u200b\u8bf7\u6c42\u200b\u8d85\u65f6\u200b\")\n</code></pre>"},{"location":"usage/#_9","title":"\u9519\u8bef\u5904\u7406","text":""},{"location":"usage/#_10","title":"\u5904\u7406\u200b\u5e38\u89c1\u200b\u9519\u8bef","text":"<pre><code>async def main():\n    result = await fetch(\"https://example.com/not-found\")\n\n    match result[\"status\"]:\n        case \"200\":\n            print(\"\u200b\u6210\u529f\u200b\")\n            process_content(result[\"content\"])\n        case \"404\":\n            print(\"\u200b\u9875\u9762\u200b\u4e0d\u200b\u5b58\u5728\u200b\")\n        case \"timeout\":\n            print(\"\u200b\u8bf7\u6c42\u200b\u8d85\u65f6\u200b\")\n        case \"error\":\n            print(f\"\u200b\u53d1\u751f\u200b\u9519\u8bef\u200b: {result['content']}\")\n</code></pre>"},{"location":"usage/#_11","title":"\u6279\u91cf\u200b\u8bf7\u6c42\u200b\u9519\u8bef\u5904\u7406","text":"<pre><code>async def main():\n    urls = [\n        \"https://example.com\",\n        \"https://invalid-domain.com\",\n        \"https://example.org\"\n    ]\n\n    results = await fetch(urls)\n\n    # \u200b\u5206\u7c7b\u200b\u5904\u7406\u7ed3\u679c\u200b\n    successful = [r for r in results if r[\"status\"] == \"200\"]\n    failed = [r for r in results if r[\"status\"] != \"200\"]\n\n    print(f\"\u200b\u6210\u529f\u200b: {len(successful)}, \u200b\u5931\u8d25\u200b: {len(failed)}\")\n</code></pre>"},{"location":"usage/#_12","title":"\u6027\u80fd\u200b\u4f18\u5316","text":""},{"location":"usage/#_13","title":"\u63a7\u5236\u200b\u5e76\u53d1\u200b\u6570","text":"<pre><code>async def main():\n    urls = [\"https://example.com\"] * 100\n\n    # \u200b\u9650\u5236\u200b\u5e76\u53d1\u200b\u6570\u4e3a\u200b10\n    results = await fetch(urls, max_concurrent=10)\n</code></pre>"},{"location":"usage/#url","title":"\u6279\u91cf\u200b\u5904\u7406\u200b\u5927\u91cf\u200bURL","text":"<pre><code>async def process_urls(urls, batch_size=50):\n    \"\"\"\u200b\u5206\u6279\u200b\u5904\u7406\u200b\u5927\u91cf\u200bURL\"\"\"\n    for i in range(0, len(urls), batch_size):\n        batch = urls[i:i + batch_size]\n        results = await fetch(batch, max_concurrent=10)\n        process_results(results)\n</code></pre>"},{"location":"usage/#_14","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":"<ol> <li>\u200b\u8bbe\u7f6e\u200b\u5408\u9002\u200b\u7684\u200b\u5e76\u53d1\u200b\u6570\u200b</li> <li>\u200b\u5efa\u8bae\u200b\u503c\u200b\uff1a5-20</li> <li> <p>\u200b\u6839\u636e\u200b\u76ee\u6807\u200b\u670d\u52a1\u5668\u200b\u7684\u200b\u627f\u53d7\u80fd\u529b\u200b\u8c03\u6574\u200b</p> </li> <li> <p>\u200b\u5408\u7406\u200b\u7684\u200b\u8d85\u65f6\u200b\u8bbe\u7f6e\u200b</p> </li> <li>\u200b\u666e\u901a\u200b\u7f51\u9875\u200b\uff1a30\u200b\u79d2\u200b</li> <li>API\u200b\u8c03\u7528\u200b\uff1a5-10\u200b\u79d2\u200b</li> <li> <p>\u200b\u6587\u4ef6\u200b\u4e0b\u8f7d\u200b\uff1a\u200b\u6839\u636e\u200b\u6587\u4ef6\u5927\u5c0f\u200b\u8c03\u6574\u200b</p> </li> <li> <p>\u200b\u53cb\u597d\u200b\u7684\u200b\u8bf7\u6c42\u200b\u5934\u200b <pre><code>headers = {\n    \"User-Agent\": \"MyBot/1.0 (your@email.com)\",\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\"\n}\n</code></pre></p> </li> <li> <p>\u200b\u8d44\u6e90\u200b\u6e05\u7406\u200b <pre><code>async def main():\n    try:\n        results = await fetch(urls)\n        process_results(results)\n    except Exception as e:\n        logger.error(f\"Error: {e}\")\n    finally:\n        # \u200b\u6e05\u7406\u200b\u8d44\u6e90\u200b\n        cleanup_resources()\n</code></pre></p> </li> </ol>"}]}